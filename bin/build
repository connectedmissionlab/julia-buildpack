#!/usr/bin/env bash
set -euo pipefail

layer=$CNB_LAYERS_DIR
julia_layer=$layer/julia
julia_launch=$layer/launchjulia
mkdir -p $julia_layer $julia_launch

# download & install julia, instantiate & precompile
curl -fsSL https://install.julialang.org | sh -s -- --add-to-path=0 --yes --path $julia_layer
$julia_layer/bin/julia --project=$(pwd) -e "using Pkg; Pkg.instantiate(); Pkg.precompile();"

# determine the name of the app (aka package)
if [ -f Project.toml ]; then
  appName=$(head -n 1 Project.toml | awk -F '"' '{print $2}')
else
  appName=""
fi

# save the julia home directory
# note: mv instead of cp & rm is slower
cp -r $HOME/.julia $layer/dotjulia

# generate a launch script
cat > $julia_launch/julia.sh << EOL
#!/bin/bash
alias julia='${layer}/julia/bin/./julia'
cp -r $layer/dotjulia $HOME/.julia
rm -rf $layer/dotjulia

if [[ -n "$appName" ]]; then
  if [[ -f "src/$appName.jl" ]]; then
    julia --project=@. -e 'include("src/${appName}.jl")'
  else
    echo "Error: File src/$appName.jl not found."
  fi
else
  julia
fi
EOL
chmod +x $julia_launch/julia.sh

# set launch directories
for file in julia.toml dotjulia.toml launchjulia.toml; do
  echo -e "[types]\nlaunch = true" > "$layer/$file"
done

# default launch process
cat > $layer/launch.toml << EOL
[[processes]]
type = "shell"
command = ["${layer}/launchjulia/./julia.sh"]
default = true
EOL

exit 0
